version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_DB: soa_app_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my_network

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - my_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://kafka1:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_CREATE_TOPICS: "analytics:1:1"
    depends_on:
      - zoo1
    networks:
      - my_network

  user-service:
    image: toie/user-service:1
    container_name: user-service
    ports:
      - "8081:8081"
    networks:
      - my_network

  shop-app:
    image: toie/shop-app:1
    container_name: shop-app
    ports:
      - "8082:8082"
    networks:
      - my_network

  email-service:
    image: toie/email-service:1
    container_name: email-service
    ports:
      - "8083:8083"
    networks:
      - my_network

  analytics-service:
    image: toie/analytics-service:1
    container_name: analytics-service
    ports:
      - "8084:8084"
    networks:
      - my_network

  shop-frontend:
    image: toie/shop-frontend:1
    container_name: shop-frontend
    ports:
      - "4200:80"
    networks:
      - my_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    networks:
      - my_network
    command: tunnel --no-autoupdate run --token eyJhIjoiMWM5YjU0YjM2YzY3NTkwZDFiMWFmZDY0YTQyZGI0NzEiLCJ0IjoiZmNlMWU3YTItMTVkZi00ZTM4LTk1ZjQtZjZkNTk3NmIyNjk0IiwicyI6IllqWTNNVE01Wm1JdE5tTTNaaTAwTURnMkxXSXlZMkl0WldOaE56UXdZakpoWXpCaSJ9

networks:
  my_network: